// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/IBM/ubiquity-k8s/sidecars/flex (interfaces: FlexConfigSyncer)

// Package mocks is a generated GoMock package.
package mocks

import (
	resources "github.com/IBM/ubiquity/resources"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockFlexConfigSyncer is a mock of FlexConfigSyncer interface
type MockFlexConfigSyncer struct {
	ctrl     *gomock.Controller
	recorder *MockFlexConfigSyncerMockRecorder
}

// MockFlexConfigSyncerMockRecorder is the mock recorder for MockFlexConfigSyncer
type MockFlexConfigSyncerMockRecorder struct {
	mock *MockFlexConfigSyncer
}

// NewMockFlexConfigSyncer creates a new mock instance
func NewMockFlexConfigSyncer(ctrl *gomock.Controller) *MockFlexConfigSyncer {
	mock := &MockFlexConfigSyncer{ctrl: ctrl}
	mock.recorder = &MockFlexConfigSyncerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFlexConfigSyncer) EXPECT() *MockFlexConfigSyncerMockRecorder {
	return m.recorder
}

// GetCurrentFlexConfig mocks base method
func (m *MockFlexConfigSyncer) GetCurrentFlexConfig() (*resources.UbiquityPluginConfig, error) {
	ret := m.ctrl.Call(m, "GetCurrentFlexConfig")
	ret0, _ := ret[0].(*resources.UbiquityPluginConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCurrentFlexConfig indicates an expected call of GetCurrentFlexConfig
func (mr *MockFlexConfigSyncerMockRecorder) GetCurrentFlexConfig() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrentFlexConfig", reflect.TypeOf((*MockFlexConfigSyncer)(nil).GetCurrentFlexConfig))
}

// UpdateFlexConfig mocks base method
func (m *MockFlexConfigSyncer) UpdateFlexConfig(arg0 *resources.UbiquityPluginConfig) error {
	ret := m.ctrl.Call(m, "UpdateFlexConfig", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateFlexConfig indicates an expected call of UpdateFlexConfig
func (mr *MockFlexConfigSyncerMockRecorder) UpdateFlexConfig(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateFlexConfig", reflect.TypeOf((*MockFlexConfigSyncer)(nil).UpdateFlexConfig), arg0)
}
