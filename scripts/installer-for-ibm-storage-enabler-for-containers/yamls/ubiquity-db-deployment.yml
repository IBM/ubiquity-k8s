apiVersion: "extensions/v1beta1"
kind: Deployment
metadata:
  name: ubiquity-db
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: ubiquity-db
    spec:
      containers:
      - name: ubiquity-db
        image: UBIQUITY_DB_IMAGE
        ports:
        - containerPort: 5432
          name: ubiq-db-port  # no more then 15 chars
        env:
          - name: UBIQUITY_DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: ubiquity-db-credentials
                key: username

          - name: UBIQUITY_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: ubiquity-db-credentials
                key: password

          - name: UBIQUITY_DB_NAME
            valueFrom:
              secretKeyRef:
                name: ubiquity-db-credentials
                key: dbname

        volumeMounts:
          - name: ibm-ubiquity-db
            mountPath: "/var/lib/postgresql/data"
            subPath: "ibm-ubiquity"
# Certificate Set : use the below volumeMounts only if predefine certificate given
# Cert #          - name: ubiquity-db-private-certificate
# Cert #            mountPath: /var/lib/postgresql/ssl/private/
      volumes:
      - name: ibm-ubiquity-db
        persistentVolumeClaim:
          claimName: ibm-ubiquity-db
# Certificate Set : use the below volumes only if predefine certificate given
# Cert #      - name: ubiquity-db-private-certificate
# Cert #        secret:
# Cert #          secretName: ubiquity-db-private-certificate
# Cert #          items:
# Cert #          - key: ubiquity-db.key
# Cert #            path: ubiquity-db.key
# Cert #            mode: 0600
# Cert #          - key: ubiquity-db.crt
# Cert #            path: ubiquity-db.crt
# Cert #            mode: 0600