apiVersion: "extensions/v1beta1"
kind: Deployment
metadata:
  name: ubiquity-k8s-provisioner
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: ubiquity-k8s-provisioner
    spec:
      containers:
      - name: ubiquity-k8s-provisioner
        image: UBIQUITY_K8S_PROVISIONER_IMAGE
        env:
          - name: UBIQUITY_ADDRESS  # Ubiquity hostname, should point to the ubiquity service name
            value: "ubiquity"
          - name: UBIQUITY_PORT     # Ubiquity port, should point to the ubiquity service port
            value: "9999"
          - name: KUBECONFIG
            value: "/tmp/k8sconfig/config"
          - name: RETRIES          # number of retries on failure
            value: "1"
          - name: LOG_PATH         # provisioner log file directory
            value: "/tmp"
          - name: BACKENDS         # used backends "spectrum-scale,spectrum-scale-nfs,scbe"
            value: "scbe"

          - name: LOG_LEVEL       # debug / info / error
            value: "debug"        # TODO will come from generic configMap
          - name: UBIQUITY_PLUGIN_USE_SSL  # boolean (true or false)
            value: ""
          - name: UBIQUITY_PLUGIN_VERIFY_CA # path-to-CA-cert # TODO should be hardcoded in the provisioner
            value: ""

          - name: UBIQUITY_USERNAME           # TODO as secret
            value: "UBIQUITY_USERNAME_VALUE"
          - name: UBIQUITY_PASSWORD           # TODO as secret
            value: "UBIQUITY_USERNAME_VALUE"


        volumeMounts:
          - name: k8s-config
            mountPath: /tmp/k8sconfig
#          - mountPath: /var/lib/ubiquity/ssl/scbe # TODO make sure the dir exist
#            name: certificates-scbe
#            readOnly: true

      volumes:
        - name: k8s-config
          configMap:
            name: k8s-config
#        - name: certificates-scbe
#          hostPath:
#            path: /etc/ubiquity/ssl/scbe
#            type: Directory

