// +build !ignore_autogenerated

/*
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by deepcopy-gen. Do not edit it manually!

package testing

import (
	conversion "k8s.io/apimachinery/pkg/conversion"
	reflect "reflect"
)

// GetGeneratedDeepCopyFuncs returns the generated funcs, since we aren't registering them.
func GetGeneratedDeepCopyFuncs() []conversion.GeneratedDeepCopyFunc {
	return []conversion.GeneratedDeepCopyFunc{
		{Fn: DeepCopy_testing_ExternalInternalSame, InType: reflect.TypeOf(&ExternalInternalSame{})},
		{Fn: DeepCopy_testing_ExternalTestType1, InType: reflect.TypeOf(&ExternalTestType1{})},
		{Fn: DeepCopy_testing_ExternalTestType2, InType: reflect.TypeOf(&ExternalTestType2{})},
		{Fn: DeepCopy_testing_TestType1, InType: reflect.TypeOf(&TestType1{})},
		{Fn: DeepCopy_testing_TestType2, InType: reflect.TypeOf(&TestType2{})},
	}
}

// DeepCopy_testing_ExternalInternalSame is an autogenerated deepcopy function.
func DeepCopy_testing_ExternalInternalSame(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*ExternalInternalSame)
		out := out.(*ExternalInternalSame)
		*out = *in
		return nil
	}
}

// DeepCopy_testing_ExternalTestType1 is an autogenerated deepcopy function.
func DeepCopy_testing_ExternalTestType1(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*ExternalTestType1)
		out := out.(*ExternalTestType1)
		*out = *in
		if in.M != nil {
			in, out := &in.M, &out.M
			*out = make(map[string]int)
			for key, val := range *in {
				(*out)[key] = val
			}
		}
		if in.N != nil {
			in, out := &in.N, &out.N
			*out = make(map[string]ExternalTestType2)
			for key, val := range *in {
				(*out)[key] = val
			}
		}
		if in.O != nil {
			in, out := &in.O, &out.O
			*out = new(ExternalTestType2)
			**out = **in
		}
		if in.P != nil {
			in, out := &in.P, &out.P
			*out = make([]ExternalTestType2, len(*in))
			copy(*out, *in)
		}
		return nil
	}
}

// DeepCopy_testing_ExternalTestType2 is an autogenerated deepcopy function.
func DeepCopy_testing_ExternalTestType2(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*ExternalTestType2)
		out := out.(*ExternalTestType2)
		*out = *in
		return nil
	}
}

// DeepCopy_testing_TestType1 is an autogenerated deepcopy function.
func DeepCopy_testing_TestType1(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*TestType1)
		out := out.(*TestType1)
		*out = *in
		if in.M != nil {
			in, out := &in.M, &out.M
			*out = make(map[string]int)
			for key, val := range *in {
				(*out)[key] = val
			}
		}
		if in.N != nil {
			in, out := &in.N, &out.N
			*out = make(map[string]TestType2)
			for key, val := range *in {
				(*out)[key] = val
			}
		}
		if in.O != nil {
			in, out := &in.O, &out.O
			*out = new(TestType2)
			**out = **in
		}
		if in.P != nil {
			in, out := &in.P, &out.P
			*out = make([]TestType2, len(*in))
			copy(*out, *in)
		}
		return nil
	}
}

// DeepCopy_testing_TestType2 is an autogenerated deepcopy function.
func DeepCopy_testing_TestType2(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*TestType2)
		out := out.(*TestType2)
		*out = *in
		return nil
	}
}
