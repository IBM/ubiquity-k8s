// +build !ignore_autogenerated

/*
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by deepcopy-gen. Do not edit it manually!

package testing

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	reflect "reflect"
)

// GetGeneratedDeepCopyFuncs returns the generated funcs, since we aren't registering them.
func GetGeneratedDeepCopyFuncs() []conversion.GeneratedDeepCopyFunc {
	return []conversion.GeneratedDeepCopyFunc{
		{Fn: DeepCopy_testing_Simple, InType: reflect.TypeOf(&Simple{})},
		{Fn: DeepCopy_testing_SimpleGetOptions, InType: reflect.TypeOf(&SimpleGetOptions{})},
		{Fn: DeepCopy_testing_SimpleList, InType: reflect.TypeOf(&SimpleList{})},
		{Fn: DeepCopy_testing_SimpleRoot, InType: reflect.TypeOf(&SimpleRoot{})},
		{Fn: DeepCopy_testing_SimpleXGSubresource, InType: reflect.TypeOf(&SimpleXGSubresource{})},
	}
}

// DeepCopy_testing_Simple is an autogenerated deepcopy function.
func DeepCopy_testing_Simple(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*Simple)
		out := out.(*Simple)
		*out = *in
		if newVal, err := c.DeepCopy(&in.ObjectMeta); err != nil {
			return err
		} else {
			out.ObjectMeta = *newVal.(*v1.ObjectMeta)
		}
		if in.Labels != nil {
			in, out := &in.Labels, &out.Labels
			*out = make(map[string]string)
			for key, val := range *in {
				(*out)[key] = val
			}
		}
		return nil
	}
}

// DeepCopy_testing_SimpleGetOptions is an autogenerated deepcopy function.
func DeepCopy_testing_SimpleGetOptions(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*SimpleGetOptions)
		out := out.(*SimpleGetOptions)
		*out = *in
		return nil
	}
}

// DeepCopy_testing_SimpleList is an autogenerated deepcopy function.
func DeepCopy_testing_SimpleList(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*SimpleList)
		out := out.(*SimpleList)
		*out = *in
		if in.Items != nil {
			in, out := &in.Items, &out.Items
			*out = make([]Simple, len(*in))
			for i := range *in {
				if newVal, err := c.DeepCopy(&(*in)[i]); err != nil {
					return err
				} else {
					(*out)[i] = *newVal.(*Simple)
				}
			}
		}
		return nil
	}
}

// DeepCopy_testing_SimpleRoot is an autogenerated deepcopy function.
func DeepCopy_testing_SimpleRoot(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*SimpleRoot)
		out := out.(*SimpleRoot)
		*out = *in
		if newVal, err := c.DeepCopy(&in.ObjectMeta); err != nil {
			return err
		} else {
			out.ObjectMeta = *newVal.(*v1.ObjectMeta)
		}
		if in.Labels != nil {
			in, out := &in.Labels, &out.Labels
			*out = make(map[string]string)
			for key, val := range *in {
				(*out)[key] = val
			}
		}
		return nil
	}
}

// DeepCopy_testing_SimpleXGSubresource is an autogenerated deepcopy function.
func DeepCopy_testing_SimpleXGSubresource(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*SimpleXGSubresource)
		out := out.(*SimpleXGSubresource)
		*out = *in
		if newVal, err := c.DeepCopy(&in.ObjectMeta); err != nil {
			return err
		} else {
			out.ObjectMeta = *newVal.(*v1.ObjectMeta)
		}
		if in.Labels != nil {
			in, out := &in.Labels, &out.Labels
			*out = make(map[string]string)
			for key, val := range *in {
				(*out)[key] = val
			}
		}
		return nil
	}
}
